{"version":3,"sources":["Nominee.js","Nominees.js","SearchResult.js","MovieSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Nominee","props","className","title","year","disabled","onClick","id","Nominees","nominees","i","length","movie","push","SearchResult","handleClick","useState","expand","setExpand","data","setData","setError","setLoading","fetch","then","resp","json","response","Response","Error","catch","message","src","alt","MovieSearch","new_search","nominated","j","nomList","App","useCookies","cookies","setCookie","removeCookie","value","setValue","q","setQ","noms","setNomList","count","parseInt","nomCount","setNomCount","banner","setBanner","useEffect","Search","path","type","placeholder","onChange","event","target","onKeyUp","code","newNomList","Title","Year","index","updatedNomList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.36a3c468.chunk.js","sourcesContent":["// JavaScript source code\r\nimport React from 'react'\r\n\r\nfunction Nominee(props) {\r\n\r\n    function handleClick() {\r\n        props.onClick(props.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nominee\">\r\n            <div className=\"movie-info\">\r\n                <h2> {props.title} </h2>\r\n                <h3> {props.year} </h3>\r\n            </div>\r\n            <button className=\"remove-btn\"\r\n                disabled={props.disabled}\r\n                onClick={handleClick}>\r\n                Remove\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nominee","// JavaScript source code\r\nimport Nominee from './Nominee'\r\n\r\nfunction Nominees(props) {\r\n    let nominees = []\r\n\r\n    for (let i = 0; i < props.nominees.length; i++) {\r\n        let movie = props.nominees[i];\r\n\r\n        nominees.push(\r\n            <Nominee\r\n                key={i}\r\n                id={movie[\"id\"]}\r\n                title={movie[\"Title\"]}\r\n                year={movie[\"Year\"]}\r\n                onClick={props.onClick}\r\n            />\r\n\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"nominee-list\">\r\n            {nominees}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nominees","import React from 'react'\r\nimport { useState} from 'react'\r\n\r\nconst API_KEY = \"677802be\";\r\n\r\nfunction SearchResult(props) {\r\n\r\n    const id = props.movie[\"imdbID\"];\r\n    const title = props.movie[\"Title\"];\r\n    const year = props.movie[\"Year\"];\r\n    \r\n\r\n    function handleClick() {\r\n        props.onClick(id, title, year);\r\n    }\r\n\r\n    const [expand, setExpand] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    fetch(`https://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`)\r\n        .then(resp => resp.json())\r\n        .then(response => {\r\n            if (response.Response === 'False') {\r\n                setError(response.Error);\r\n            }\r\n            else {\r\n                setData(response);\r\n            }\r\n\r\n            setLoading(false);\r\n        })\r\n        .catch(({ message }) => {\r\n            setError(message);\r\n            setLoading(false);\r\n        }) \r\n\r\n    if (expand) {\r\n         return (\r\n            <div className=\"search-item\">\r\n                <div className=\"min-search\">\r\n                    <div className=\"movie-info\">\r\n                        <h2> {title} </h2>\r\n                        <h3> {year} </h3>\r\n                    </div>\r\n                    <button className=\"nominate-btn\"\r\n                        disabled={props.disabled}\r\n                        onClick={handleClick} >\r\n                        Nominate\r\n                    </button>\r\n                </div>\r\n\r\n                 <div className=\"added-info\">\r\n                     <div className=\"movie-more-info\">\r\n                         <p> Genre: {data[\"Genre\"]} </p>\r\n                         <p> Director: {data[\"Director\"]} </p>\r\n                         <p> Actors: {data[\"Actors\"]} </p>\r\n                         <p> Plot: {data[\"Plot\"]} </p>\r\n                     </div>\r\n                     <div className=\"poster-div\">\r\n                         <img className= \"poster\" src={data[\"Poster\"]} alt=\"Movie Poster not Found\" />\r\n                     </div>\r\n                </div>\r\n\r\n                <button className=\"expand-btn\"\r\n                    onClick={() => setExpand(false)}>\r\n                    See Less\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-item\">\r\n            <div className=\"min-search\">\r\n                <div className=\"movie-info\">\r\n                    <h2> {title} </h2>\r\n                    <h3> {year} </h3>\r\n                </div>\r\n                <button className=\"nominate-btn\"\r\n                    disabled={props.disabled}\r\n                    onClick={handleClick} >\r\n                        Nominate\r\n                </button>\r\n            </div>\r\n            <button className=\"expand-btn\"\r\n                onClick={() => {\r\n                    setExpand(true);\r\n                }}>\r\n                See More\r\n            </button>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default SearchResult","// JavaScript source code\r\nimport SearchResult from './SearchResult'\r\n\r\nfunction MovieSearch(props) {\r\n\r\n    let new_search = []\r\n\r\n\r\n    for (let i = 0; i < props.data.length; i++) {\r\n        let nominated = false;\r\n\r\n        let movie = props.data[i];\r\n\r\n        for (let j = 0; j < props.nomList.length; j++) {\r\n            if (movie[\"imdbID\"] === props.nomList[j][\"id\"]) {\r\n                nominated = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        new_search.push(\r\n            <SearchResult\r\n                key={i}\r\n                movie={movie}\r\n                disabled={nominated}\r\n                onClick={props.onClick} />\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"movies-list\">\r\n            {new_search}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieSearch","import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport Nominees from './Nominees'\r\nimport MovieSearch from './MovieSearch'\r\n\r\nconst API_KEY = \"677802be\";\r\n\r\nfunction App() {\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['cookies']);\r\n\r\n    const [value, setValue] = useState('');\r\n    const [q, setQ] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    //const [nomList, setNomList] = useState([]);\r\n    //const [nomCount, setNomCount] = useState(0);\r\n    const [nomList, setNomList] = useState(cookies.noms ? cookies.noms: []);\r\n    const [nomCount, setNomCount] = useState(cookies.count ? parseInt(cookies.count): 0);\r\n    const [banner, setBanner] = useState(null);\r\n\r\n    // Figure out whats up here\r\n    useEffect( () => {\r\n\r\n        setLoading(true);\r\n        setError(null);\r\n        setData([]);\r\n\r\n        fetch(`https://www.omdbapi.com/?s=${q}&apikey=${API_KEY}`)\r\n            .then(resp => resp.json())\r\n            .then(response => {\r\n                if (response.Response === 'False') {\r\n                    setError(response.Error);\r\n                }\r\n                else {\r\n                    setData(response.Search);\r\n                }\r\n\r\n                setLoading(false);\r\n            })\r\n            .catch(({ message }) => {\r\n                setError(message);\r\n                setLoading(false);\r\n            })\r\n    }, [q]);\r\n\r\n    useEffect(() => {\r\n        if (nomCount === 5) {\r\n            setBanner(\r\n                <div className=\"banner\">\r\n                    <h2> Congratulations!  You've nominated 5 movies for the Shoppies! </h2>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else {\r\n            setBanner(null);\r\n        }\r\n\r\n        let val = nomCount;\r\n        setCookie('count', val, { path: '/' });\r\n    }, [nomCount]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1> SHOPPIES NOMINATIONS </h1>\r\n            </header>\r\n\r\n            <div className=\"App-body\">\r\n                <div className=\"main-bar\">\r\n                    <div className = \"search-panel\">\r\n                        <h2> Find Your Movie: </h2>\r\n                        < input\r\n                            className=\"search-bar\"\r\n                            type=\"text\"\r\n                            key=\"search-bar\"\r\n                            value={value}\r\n                            placeholder={\"Movie Title\"}\r\n                            onChange={(event) => setValue(event.target.value)}\r\n                            onKeyUp={(event) => {\r\n                                if (event.code === \"Enter\"){\r\n                                    setQ(value);\r\n                                }\r\n                            }}\r\n                        />\r\n\r\n                        <button className=\"main-btn\"\r\n                            onClick={() => setQ(value)}> \r\n                            Search\r\n                        </button>\r\n                     </div>\r\n                    <div className=\"cookies-bar\">\r\n                        <button\r\n                            className=\"main-btn\"\r\n                            onClick={\r\n                                () => {\r\n                                    setCookie('noms', [], { path: '/' });\r\n                                    setCookie('count', 0, { path: '/' });\r\n                                    setNomCount(0);\r\n                                    setNomList([]);\r\n                                }\r\n                            }>\r\n                            Reset Cookies\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"main-btn\"\r\n                            onClick={\r\n                                () => {\r\n                                    removeCookie('noms');\r\n                                    removeCookie('count');\r\n                                }\r\n                            }>\r\n                        Remove Cookies\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {banner}\r\n\r\n                <div className=\"movie-panel\">\r\n                    <div className=\"result-panel\">\r\n                        <h2 className=\"movie-header\"> SEARCH RESULTS </h2>\r\n                        <MovieSearch\r\n                            data={data}\r\n                            nomList={nomList}\r\n                            onClick={\r\n                                (id, title, year) => {\r\n                                    if (nomCount < 5) {\r\n\r\n                                        let newNomList = [];\r\n\r\n                                        // Fix here\r\n                                        for (let j = 0; j < nomList.length; j++) {\r\n                                            newNomList.push(nomList[j]);\r\n                                        }\r\n\r\n                                        newNomList.push(\r\n                                            {\r\n                                                id: id,\r\n                                                Title: title,\r\n                                                Year: year\r\n                                            }\r\n                                        )\r\n\r\n                                        setNomCount(nomCount + 1);\r\n                                        setNomList(newNomList);\r\n\r\n                                        setCookie('noms', newNomList, { path: '/' });\r\n                                    }\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"nominated-panel\">\r\n                        <h2 className=\"movie-header\"> NOMINEES </h2>\r\n\r\n                        <Nominees\r\n                            nominees={nomList}\r\n                            onClick={\r\n                                (id) => {\r\n                                    let index = 0;\r\n                                    for (let j = 0; j < nomList.length; j++) {\r\n\r\n                                        if (id === nomList[j][\"id\"]) {\r\n                                            index = j;\r\n                                        }\r\n                                    }\r\n\r\n                                    let updatedNomList = [];\r\n\r\n                                    for (let j = 0; j < nomList.length; j++) {\r\n                                        if (j !== index) {\r\n                                            updatedNomList.push(nomList[j]);\r\n                                        }\r\n                                    }\r\n\r\n                                    setNomList(updatedNomList);\r\n                                    setCookie('noms', updatedNomList, { path: '/' });\r\n                                    setNomCount(nomCount - 1);\r\n\r\n\r\n                                }\r\n                                            \r\n                            }/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie'\n\nReactDOM.render(\n    <React.StrictMode>\n        <CookiesProvider>\n            <App />\n        </CookiesProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}